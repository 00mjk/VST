HOW TO BUILD:
(cd msl; make); (cd compcert; ./make); (cd veric; make); (cd progs; make); 
   (cd compositional_compcert; make)

The Verified Software Toolchain is organized into separate subprojects,
each in a separate directory:

msl -   Mechanized Software Library
examples - examples of how to use the msl
compcert -   front end of the CompCert compiler, specification of C light
compositional_compcert - the theory and practice of how to specify 
    shared-memory interaction (for separation compilation and concurrency) 
    for CompCert
veric -  program logic (and soundness proof) for Verifiable C
floyd -  tactics for applying the separation logic
progs -  sample programs, with their verifications
veristar - decision procedure for entailments in separation logic,
           proved sound w.r.t. veric  (needs maintenance to bring it up to date)

The Makefile and naming structure is a bit unusual.
The dependencies are:

msl:   # no dependency on other directories
examples: msl
compcert: # no dependency on other directories
compositional_compcert: compcert
veric:  msl compcert compositional_compcert
floyd: msl compositional_compcert compcert veric
progs: msl compositional_compcert compcert veric floyd

In general, we will Import using "-I" (nonrecursive) instead of "-R"
(recursive).  This means modules need to be named using qualified names.
Thus, in "veric/expr.v" we write "Require Import msl.msl_standard."
instead of "Require Import msl_standard."  To make this work, the loadpaths
need to be set up properly:  in msl/Makefile we write,
    COQFLAGS= -I . -as msl
and that ensures that the .vo files expect to be imported with qualified paths.
In veric/Makefile, progs/Makefile, etc. we do the corresponding thing.

Inside veric (and progs, etc.), to get access to other directories (i.e.,
when veric/expr.v gets access to msl/msl_standard.v), we need to
set up the loadpath.  Should this be done via the "Add LoadPath" command,
or should it be done via the -I option to coqtop? 
 Answer 1:  It MUST be done via "Add LoadPath", otherwise 
            the IDEs (Proof General and CoqIde) will not see it.
 Answer 2:  It MUST be done via the -I option, otherwise coqdep will not see it.
Thus we do BOTH, as you can see in the makefiles.

Note that we don't need this "loadpath" complexity for the msl directory
itself, because it does not import from other directories.  This makes
it easier to use msl as a self-contained library, importable into other
projects.


THE EXCEPTION to all these rules is the compcert directory.
Since this is a verbatim copy of the front-end portions of compcert itself,
and it uses quite a different naming/access convention, we must import
compcert on its own terms.  You can see evidence of this in veric/loadpath.v,
in veric/Makefile, and in the fact that all the Require commands that
mention compcert components do not (and cannot) say "Require compcert.AST."
but must instead say "Require AST."

NOTE ABOUT .depends FILE:
We have the .depends file checked into the repository, so that
one can build the whole system even if (for some reason) coqdep
is not installed.   
In each directory, do "make depend" to rebuild the .depend file.

